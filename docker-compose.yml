version: "3.6"


services:

  core:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_core
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/core:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    profiles:
      - core

  jobs:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_jobs
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/jobs:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    depends_on:
      - mongodb
    profiles:
      - jobs

  server:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_server
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/server:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${BACKEND_EXAMPLES_PORT}:${BACKEND_EXAMPLES_PORT}"
    depends_on:
      - mongodb
    profiles:
      - client
      - server

  form:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_form
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/form:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${FRONTEND_EXAMPLES_PORT}:${FRONTEND_EXAMPLES_PORT}"
    profiles:
      - form

  ui:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_ui
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/ui:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${FRONTEND_EXAMPLES_PORT}:${FRONTEND_EXAMPLES_PORT}"
    profiles:
      - ui

  store:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_store
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/store:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${FRONTEND_EXAMPLES_PORT}:${FRONTEND_EXAMPLES_PORT}"
    profiles:
      - store

  client:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_client
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    volumes:
      - ./packages/client:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${FRONTEND_EXAMPLES_PORT}:${FRONTEND_EXAMPLES_PORT}"
    depends_on:
      - server
      - mongodb
    profiles:
      - client

  dev-kit:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_dev-kit
    env_file:
      - .env
    command: sh -c "yarn && tail -f /dev/null"
    volumes:
      - ./packages/dev-kit:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${BACKEND_EXAMPLES_PORT}:${BACKEND_EXAMPLES_PORT}"
      - "${HOST_IP}:${FRONTEND_EXAMPLES_PORT}:${FRONTEND_EXAMPLES_PORT}"
    restart: unless-stopped
    profiles:
      - dev-kit

  examples:
    tty: true
    user: node:node
    image: openizr/node:7.0.0-dev
    container_name: ${PROJECT_NAME}_examples
    env_file:
      - .env
    command: sh -c "yarn && yarn run dev"
    working_dir: /var/www/html/${EXAMPLES_PROJECT}
    volumes:
      - ./examples:/var/www/html
      - ~/.cache/yarn:/home/node/.cache/yarn
    ports:
      - "${HOST_IP}:${BACKEND_EXAMPLES_PORT}:${BACKEND_EXAMPLES_PORT}"
      - "${HOST_IP}:${FRONTEND_EXAMPLES_PORT}:${FRONTEND_EXAMPLES_PORT}"
    depends_on:
      - mongodb
    profiles:
      - examples

  mongodb:
    tty: true
    image: mongo:6.0.5
    container_name: ${PROJECT_NAME}_mongodb
    command: mongod --replSet rs0 --quiet --logpath /dev/null
    ports:
      - "${HOST_IP}:27018:27017"
    profiles:
      - client
      - server
      - jobs
      - examples

  mysql:
    tty: true
    image: mysql:latest
    container_name: ${PROJECT_NAME}_mysql
    ports:
      - "${HOST_IP}:3306:3306"
    environment:
      MYSQL_DATABASE: test
      MYSQL_ROOT_PASSWORD: Test123!
    profiles:
      - client
      - server
      - jobs
      - examples

  postgresql:
    tty: true
    image: postgres:latest
    container_name: ${PROJECT_NAME}_postgresql
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_DB: root
      POSTGRES_USER: root
      POSTGRES_PASSWORD: Test123!
    ports:
      - "${HOST_IP}:5432:5432"
    profiles:
      - client
      - server
      - jobs
      - examples


# For people that use a VPN
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: ${DOCKER_SUBNET}