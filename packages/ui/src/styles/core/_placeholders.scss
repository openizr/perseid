/**
 * Copyright (c) Openizr. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */

//**************************************************************************************************
// Built-in internal placeholders - DO NOT USE THEM DIRECTLY, USE THE `extend` MIXIN INSTEAD.
//**************************************************************************************************

%grid {
  display: var(--disp);
  grid-auto-flow: var(--flow);
  grid-template-columns: repeat(var(--cols), minmax(0, 1fr));
}

%grid-flex {
  row-gap: var(--vgap);
  column-gap: var(--hgap);
  align-items: var(--items);
  justify-content: var(--just);
}

%col {
  grid-column: span var(--span);
}

%none-block {
  display: var(--disp);
}

%flex {
  display: var(--disp);
  flex: var(--flex);
  flex-wrap: var(--wrap);
  flex-direction: var(--dir);
}

%self {
  align-self: var(--self);
}

%text {
  text-align: var(--text);
}

%width {
  width: var(--width);
}

%height {
  height: var(--height);
}

// Static placeholders.
$classes: (
  flex: (
    '--disp',
    flex
  ),
  grid: (
    '--disp',
    grid
  ),
  none: (
    '--disp',
    none
  ),
  block: (
    '--disp',
    block
  ),
  flex-wrap: (
    '--wrap',
    wrap
  ),
  flex-nowrap: (
    '--wrap',
    nowrap
  ),
  flex-wrap-rev: (
    '--wrap',
    wrap-reverse
  ),
  flex-row: (
    '--dir',
    row
  ),
  flex-col: (
    '--dir',
    column
  ),
  flex-row-rev: (
    '--dir',
    row-reverse
  ),
  flex-col-rev: (
    '--dir',
    column-reverse
  ),
  grid-row: (
    '--flow',
    row
  ),
  grid-col: (
    '--flow',
    column
  ),
  grid-dense: (
    '--flow',
    dense
  ),
  flex-none: (
    '--flex',
    none
  ),
  flex-auto: (
    '--flex',
    1 1 auto
  ),
  justify-between: (
    '--just',
    space-between
  ),
  justify-around: (
    '--just',
    space-around
  ),
  justify-start: (
    '--just',
    flex-start
  ),
  justify-end: (
    '--just',
    flex-end
  ),
  justify-stretch: (
    '--just',
    stretch
  ),
  justify-center: (
    '--just',
    center
  ),
  items-center: (
    '--items',
    center
  ),
  items-start: (
    '--items',
    flex-start
  ),
  items-end: (
    '--items',
    flex-end
  ),
  items-stretch: (
    '--items',
    stretch
  ),
  self-center: (
    '--self',
    center
  ),
  self-start: (
    '--self',
    flex-start
  ),
  self-end: (
    '--self',
    flex-end
  ),
  self-stretch: (
    '--self',
    stretch
  ),
  text-center: (
    '--text',
    center
  ),
  text-left: (
    '--text',
    left
  ),
  text-right: (
    '--text',
    right
  ),
  text-justify: (
    '--text',
    justify
  ),
  w-full: (
    '--width',
    100%
  ),
  h-full: (
    '--height',
    100%
  )
);

// --cols
@for $i from 1 to $gridColumnsNumber + 1 {
  $classes: map-merge(
    $classes,
    (
      'cols-#{$i}': (
        '--cols',
        $i
      )
    )
  );
}

// --span
@for $i from 1 to $gridColumnsNumber + 1 {
  $classes: map-merge(
    $classes,
    (
      'col-#{$i}': (
        '--span',
        $i
      )
    )
  );
}

// --vgap, --hgap
@each $key, $value in map-get($variables, gaps) {
  $classes: map-merge(
    $classes,
    (
      'vgap-#{$key}': (
        '--vgap',
        $value
      )
    )
  );
  $classes: map-merge(
    $classes,
    (
      'hgap-#{$key}': (
        '--hgap',
        $value
      )
    )
  );
}

// Breakpoint-based placeholders.
@each $breakpoint, $value in $breakpoints {
  @include query($breakpoint) {
    $class-bp: if($breakpoint==xxs, '', #{$breakpoint}#{'\\:'});

    @each $class, $val in $classes {
      %#{$class-bp}#{$class} {
        #{nth($val, 1)}: nth($val, 2);
      }
    }
  }
}

//**************************************************************************************************
// Built-in public placeholders.
//**************************************************************************************************

// Text ellipsis.
%ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

// Disabled element.
%disabled {
  opacity: 0.5;
  pointer-events: none;
}

// Interactive field's label.
%label {
  cursor: pointer;
  font-weight: 300;
  user-select: none;
  font-size: 0.75rem;
  margin-bottom: var(--gaps-1);
}
