$breakpoints: (
  xxs: 0px,
  s: 575px,
  m: 767px,
  l: 991px,
  xl: 1199px
);

@mixin resp($bps) {
  $max: 0px;

  @if length($bps) > 2 {
    @error "Maximum 2 breakpoints values are allowed to build a media query.";
  }

  @each $breakpoint in $bps {
    // If an absolute value is used, check if that value is registered or not in breakpoints map.
    // This is just an indication.
    @if map-has-key($breakpoints, $breakpoint) ==false {
      @if index(map-values($breakpoints), $breakpoint) ==null {
        @debug 'Breakpoint absolute value used ( #{$breakpoint} ). Register it if widely used.';
      } @else {
        @debug 'Duplicate breakpoint : absolute value "#{$breakpoint}" is also available with mapped breakpoints.';
      }
    }

    // Type validation and find highest value
    @if (type-of($breakpoint) != 'number') and (type-of($breakpoint) != 'string') {
      @error "Type error : #{$breakpoint}";
    }

    // Retrieve the real value in px
    $value: if(type-of($breakpoint) == 'string', map-get($breakpoints, $breakpoint), $breakpoint);

    @if ($value > $max) {
      $max: $value;
    }
  }

  // Build the media query string from $bps
  $str: '';

  @each $breakpoint in $bps {
    // Retrieve the real value in px
    $value: if(type-of($breakpoint) == 'string', map-get($breakpoints, $breakpoint), $breakpoint);

    // Build a max-width if needed
    @if $max==$value and (length($bps) > 1) {
      $str: '#{$str} and (max-width:#{$value})';
    } @else if $value==0px and length($bps) ==1 {
      // For '0px' breakpoint, we don't need to write a media query. The @content code is rendered.
      @content;
    } @else {
      // Otherwise, build a min-width media query
      @if type-of($breakpoint) == 'string' {
        $value: $value + 1;
      }

      $str: '#{$str} and (min-width: #{$value})';
    }
  }

  @if $str != '' {
    @media screen#{$str} {
      @content;
    }
  }
}

@import './comps/button';
@import './comps/link';

@font-face {
  font-family: myFont;
  src: url(fonts/test.woff2);
}

$color: grey;

@keyframes show {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

p {
  color: $color;
  font-family: 'myFont';
  animation: show 1s both;
}

img {
  display: block;
  width: 50px;
  height: 50px;
  mask: none;
}

@media screen and (min-width: 768px) {
  p {
    background: #aaaaaa;
  }
}

@media screen and (min-width: 768px) {
  body {
    background: #eeeeee;
  }
}

@media screen and (min-width: 1020px) {
  p {
    background: #eeeeee;
  }
}
